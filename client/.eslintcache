[{"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\index.js":"1","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\store.js":"2","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\App.js":"4","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\reducers\\productReducers.js":"5","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\reducers\\userReducers.js":"6","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\reducers\\cartReducers.js":"7","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\Footer.js":"8","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\reducers\\orderReducer.js":"9","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\ProfileScreen.js":"10","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\Header.js":"11","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\HomeScreen.js":"12","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\LoginScreen.js":"13","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\ProductScreen.js":"14","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\CartScreen.js":"15","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\ShippingScreen.js":"16","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\PlaceOrderScreen.js":"17","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\RegisterScreen.js":"18","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\UserListScreen.js":"19","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\PaymentScreen.js":"20","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\ProductListScreen.js":"21","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\UserEditScreen.js":"22","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\ProductEditScreen.js":"23","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\OrderListScreen.js":"24","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\OrderScreen.js":"25","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\Loader.js":"26","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\Message.js":"27","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\Paginate.js":"28","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\Product.js":"29","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\SearchBox.js":"30","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\Rating.js":"31","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\FormContainer.js":"32","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\CheckoutSteps.js":"33","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\constants\\productConstants.js":"34","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\constants\\cartConstants.js":"35","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\constants\\userConstants.js":"36","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\constants\\orderConstants.js":"37","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\actions\\orderActions.js":"38","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\actions\\userActions.js":"39","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\actions\\productActions.js":"40","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\actions\\cartActions.js":"41"},{"size":402,"mtime":1611906654051,"results":"42","hashOfConfig":"43"},{"size":2349,"mtime":1611906654056,"results":"44","hashOfConfig":"43"},{"size":375,"mtime":1611906654055,"results":"45","hashOfConfig":"43"},{"size":2945,"mtime":1611906654031,"results":"46","hashOfConfig":"43"},{"size":3316,"mtime":1611906654054,"results":"47","hashOfConfig":"43"},{"size":3615,"mtime":1611906654055,"results":"48","hashOfConfig":"43"},{"size":1181,"mtime":1611906654052,"results":"49","hashOfConfig":"43"},{"size":364,"mtime":1611906654035,"results":"50","hashOfConfig":"43"},{"size":3526,"mtime":1611906654053,"results":"51","hashOfConfig":"43"},{"size":5496,"mtime":1611906654044,"results":"52","hashOfConfig":"43"},{"size":2702,"mtime":1611906654036,"results":"53","hashOfConfig":"43"},{"size":1387,"mtime":1611906654039,"results":"54","hashOfConfig":"43"},{"size":2234,"mtime":1611906654040,"results":"55","hashOfConfig":"43"},{"size":7732,"mtime":1611906654043,"results":"56","hashOfConfig":"43"},{"size":3665,"mtime":1611906654039,"results":"57","hashOfConfig":"43"},{"size":2605,"mtime":1611906654044,"results":"58","hashOfConfig":"43"},{"size":4863,"mtime":1611906654041,"results":"59","hashOfConfig":"43"},{"size":3214,"mtime":1611906654044,"results":"60","hashOfConfig":"43"},{"size":2816,"mtime":1611906654046,"results":"61","hashOfConfig":"43"},{"size":1827,"mtime":1611906654041,"results":"62","hashOfConfig":"43"},{"size":4151,"mtime":1611906654042,"results":"63","hashOfConfig":"43"},{"size":3231,"mtime":1611906654045,"results":"64","hashOfConfig":"43"},{"size":6180,"mtime":1611906654042,"results":"65","hashOfConfig":"43"},{"size":2568,"mtime":1611906654040,"results":"66","hashOfConfig":"43"},{"size":7625,"mtime":1611906654041,"results":"67","hashOfConfig":"43"},{"size":407,"mtime":1611906654036,"results":"68","hashOfConfig":"43"},{"size":256,"mtime":1611906654037,"results":"69","hashOfConfig":"43"},{"size":784,"mtime":1611906654037,"results":"70","hashOfConfig":"43"},{"size":838,"mtime":1611906654038,"results":"71","hashOfConfig":"43"},{"size":778,"mtime":1611906654038,"results":"72","hashOfConfig":"43"},{"size":1808,"mtime":1611906654038,"results":"73","hashOfConfig":"43"},{"size":352,"mtime":1611906654035,"results":"74","hashOfConfig":"43"},{"size":1300,"mtime":1611906654035,"results":"75","hashOfConfig":"43"},{"size":1550,"mtime":1611906654049,"results":"76","hashOfConfig":"43"},{"size":289,"mtime":1611906654047,"results":"77","hashOfConfig":"43"},{"size":1536,"mtime":1611906654050,"results":"78","hashOfConfig":"43"},{"size":1286,"mtime":1611906654048,"results":"79","hashOfConfig":"43"},{"size":5616,"mtime":1611906654032,"results":"80","hashOfConfig":"43"},{"size":6664,"mtime":1611906654033,"results":"81","hashOfConfig":"43"},{"size":4794,"mtime":1611906654032,"results":"82","hashOfConfig":"43"},{"size":1268,"mtime":1611906654031,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"12m4t7i",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\index.js",[],["172","173"],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\store.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\App.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\reducers\\productReducers.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\reducers\\userReducers.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\Footer.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\reducers\\orderReducer.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\ProfileScreen.js",["174"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../Message\";\r\nimport Loader from \"../Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../../actions/userActions\";\r\nimport { listMyOrders } from \"../../actions/orderActions\";\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {success && <Message variant=\"success\">Profile Updated</Message>}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className=\"btn-sm\" variant=\"light\">\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\Header.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\HomeScreen.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\LoginScreen.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\ProductScreen.js",["175"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Image,\r\n  ListGroup,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Rating from \"../Rating\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../../actions/productActions\";\r\nimport Loader from \"../Loader\";\r\nimport Message from \"../Message\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../../constants/productConstants\";\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const {\r\n    success: successProductReview,\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: ${product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of stack\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className=\"btn-block btn-info\"\r\n                      type=\"button\"\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add to Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant=\"flush\">\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {successProductReview && (\r\n                    <Message variant=\"success\">\r\n                      Review submitted successfully\r\n                    </Message>\r\n                  )}\r\n                  {loadingProductReview && <Loader />}\r\n                  {errorProductReview && (\r\n                    <Message variant=\"danger\">{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId=\"rating\">\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=\"\">Select...</option>\r\n                          <option value=\"1\">1 - Poor</option>\r\n                          <option value=\"2\">2 - Fair</option>\r\n                          <option value=\"3\">3 - Good</option>\r\n                          <option value=\"4\">4 - Very Good</option>\r\n                          <option value=\"5\">5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"comment\">\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          row=\"3\"\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        disabled={loadingProductReview}\r\n                        type=\"submit\"\r\n                        variant=\"primary\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to=\"/login\">sign in</Link> to write a review{\" \"}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\CartScreen.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\ShippingScreen.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\PlaceOrderScreen.js",["176"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../Message\";\r\nimport CheckoutSteps from \"../../components/CheckoutSteps\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createOrder } from \"../../actions/orderActions\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  // calculate prices\r\n\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n\r\n  cart.shippingPrice = addDecimals(cart.itemPrice > 100 ? 0 : 100);\r\n  cart.taxPrice = addDecimals((0.15 * cart.itemPrice).toFixed(2));\r\n  cart.totalPrice = (\r\n    Number(cart.itemPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemPrice: cart.itemPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup.Item>\r\n            <h2>Shipping</h2>\r\n            <p>\r\n              <strong>Address:</strong> {cart.shippingAddress.address},{\" \"}\r\n              {cart.shippingAddress.city}, {cart.shippingAddress.postalCode},{\" \"}\r\n              {cart.shippingAddress.country}\r\n            </p>\r\n          </ListGroup.Item>\r\n\r\n          <ListGroup.Item>\r\n            <h2>Payment Method</h2>\r\n            <strong>Method: </strong>\r\n            {cart.paymentMethod}\r\n          </ListGroup.Item>\r\n\r\n          <ListGroup.Item>\r\n            <h2>Order Items</h2>\r\n            {cart.cartItems.length === 0 ? (\r\n              <Message>Your Cart is Empty</Message>\r\n            ) : (\r\n              <ListGroup variant=\"flush\">\r\n                {cart.cartItems.map((item, index) => (\r\n                  <ListGroup.Item key={index}>\r\n                    <Row>\r\n                      <Col md={1}>\r\n                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                      </Col>\r\n                      <Col>\r\n                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            )}\r\n          </ListGroup.Item>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summery</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block btn-info\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\RegisterScreen.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\UserListScreen.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\PaymentScreen.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\ProductListScreen.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\UserEditScreen.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\ProductEditScreen.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\OrderListScreen.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\screens\\OrderScreen.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\Loader.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\Message.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\Paginate.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\Product.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\SearchBox.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\Rating.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\FormContainer.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\constants\\productConstants.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\constants\\cartConstants.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\constants\\userConstants.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\constants\\orderConstants.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\actions\\orderActions.js",["177"],"import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n} from \"../constants/orderConstants\";\r\n\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\r\nimport axios from \"axios\";\r\nimport { logout } from \"./userActions\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\actions\\userActions.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\actions\\productActions.js",[],"C:\\Users\\Acer\\Documents\\mern-ecommerce-v2\\client\\src\\actions\\cartActions.js",[],["178","179"],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":20,"column":11,"nodeType":"186","messageId":"187","endLine":20,"endColumn":18},{"ruleId":"184","severity":1,"message":"188","line":20,"column":10,"nodeType":"186","messageId":"187","endLine":20,"endColumn":37},{"ruleId":"184","severity":1,"message":"189","line":1,"column":38,"nodeType":"186","messageId":"187","endLine":1,"endColumn":46},{"ruleId":"184","severity":1,"message":"190","line":22,"column":10,"nodeType":"186","messageId":"187","endLine":22,"endColumn":26},{"ruleId":"180","replacedBy":"191"},{"ruleId":"182","replacedBy":"192"},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'PRODUCT_CREATE_REVIEW_RESET' is defined but never used.","'useState' is defined but never used.","'CART_CLEAR_ITEMS' is defined but never used.",["193"],["194"],"no-global-assign","no-unsafe-negation"]